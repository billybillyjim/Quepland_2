@inject GameState GameState
@implements IDisposable

@foreach (Follower follower in FollowerManager.Instance.GetUnlockedFollowers())
{

<div style="position:relative;line-height:46px;@GetBG(follower)" >
    @if (Player.Instance.CurrentFollower == follower)
    {
        <div style="margin-left:10px;margin-top:-2px;color:black;" @onmouseover="@(new Action<MouseEventArgs>(e => GameState.ShowTooltip(e, "Helps with " + follower.AutoCollectSkill, "Max Level:" + (follower.AutoCollectLevel + follower.Banking.GetSkillLevelUnboosted()) + "/" + (follower.AutoCollectLevel * 2))))"
     @onmouseout="@(new Action(() => GameState.HideTooltip()))">@follower.Name</div>
        <button class="btn btn-primary" style="position:absolute;right:2px;top:2px;" @onclick="@(() => SwitchFollowers(null))">Unassign</button>

    }
    else
    {
        <div style="margin-left:10px;" @onmouseover="@(new Action<MouseEventArgs>(e => GameState.ShowTooltip(e, "Helps with " + follower.AutoCollectSkill, "Max Level:" + (follower.AutoCollectLevel + follower.Banking.GetSkillLevelUnboosted()) + "/" + (follower.AutoCollectLevel * 2))))"
     @onmouseout="@(new Action(() => GameState.HideTooltip()))">@follower.Name</div>
        <button class="btn btn-primary" style="position: absolute; right: 4px; top: 4px;" @onclick="@(() => SwitchFollowers(follower))">Assign</button>

    }
<div class="progress" style="border-radius:0;background-color:darkgray;position:relative;">
    <div class="progress-bar" style="width:@(follower.Banking.Progress)%;color:black;background-color:#51d051"
         @onmouseover="@(new Action<MouseEventArgs>(e => GameState.ShowTooltip(e, "Banking", "Experience:" + follower.Banking.Experience + "/" + String.Format("{0:n0}", Skill.GetExperienceRequired(follower.Banking.GetSkillLevelUnboosted())))))"
         @onmouseout="@(new Action(() => GameState.HideTooltip()))">

    </div>
    <div style="        
        position: absolute;
        width: 100%;
        height: 30px;
        margin-top: -15px;
        text-align: -webkit-center;">
    Level:@(follower.AutoCollectLevel + follower.Banking.GetSkillLevelUnboosted())</div>
</div>
</div>
    
}
@if (HasUnlockedAnyFollower() == false)
{
    <div style="margin:10px;color:white;">Explore the world and maybe you'll find some others who would join you on your adventure. They might not do it for free, though.</div>
}

@code {

    public bool HasUnlockedAnyFollower()
    {
        return FollowerManager.Instance.Followers.Any(x => x.IsUnlocked);
    }
    public void SwitchFollowers(Follower f)
    {
        Player.Instance.SetFollower(f);
        GameState.UpdateState();
    }

    public string GetBG(Follower f)
    {
        if (f == Player.Instance.CurrentFollower)
        {
            return "background-color:#f5f5f5;border:solid 2px black;";
        }
        string bg = "";
        if(FollowerManager.Instance.GetUnlockedFollowers().IndexOf(f) % 2 == 0)
        {
            bg += "background-color:dimgray;";
        }
        else
        {
            bg += "background-color:gray;";
        }

        return bg;
    }
    protected override void OnInitialized()
    {
        GameState.StateChanged += OnGameStateChanged;
    }
    public void Dispose()
    {
        GameState.StateChanged -= OnGameStateChanged;
    }
    void OnGameStateChanged(object sender, EventArgs e) => StateHasChanged();
}
